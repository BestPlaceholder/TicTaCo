// Apply the java plugin to add support for Java
apply plugin: 'java'
// Add application plugin for installApp and run tasks
apply plugin: 'application'

apply plugin: 'jacoco'


repositories {
    jcenter()
}



// http://www.gradle.org/docs/current/dsl/org.gradle.api.tasks.SourceSet.html
sourceSets {
    selenium
    seleniumXvfb
}


dependencies {
    
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'

    testCompile 'junit:junit:4.11'

    compile 'com.sparkjava:spark-core:1.1.1'

    // Selenium dependencies
    seleniumCompile 'junit:junit:4.11'
    seleniumCompile 'org.seleniumhq.selenium:selenium-java:2.43.0'

    // Selenium in headless mode
    seleniumXvfbCompile 'junit:junit:4.11'
    seleniumXvfbCompile 'org.seleniumhq.selenium:selenium-java:2.43.0'
}


mainClassName = "is.placeholder.tictactoe.TicTaCoWeb"

task selenium(type: Test, dependsOn: installApp) {
    testClassesDir = sourceSets.selenium.output.classesDir
    classpath = sourceSets.selenium.runtimeClasspath

    ant.condition(property: "os", value: "windows") { os(family: "windows") }
    ant.condition(property: "os", value: "unix"   ) { os(family: "unix")    }

    doFirst {
        // Start Spark web app in background
        switch(ant.properties.os) {
            case 'unix':
                'build/install/TicTaCo/bin/TicTaCo &'.execute()
                break
            case 'windows':
                'build\\install\\TicTaCo\\bin\\TicTaCo.bat'.execute()
                break
        }
    }
}

task seleniumXvfb(type: Test, dependsOn: installApp) {
    testClassesDir = sourceSets.selenium.output.classesDir
    classpath = sourceSets.selenium.runtimeClasspath

    environment "DISPLAY", ":99"

    doFirst {
        'bin/xvfb start'.execute()
        // Start Spark web app in background
        'build/install/TicTaCo/bin/TicTaCo &'.execute()
    }
    
    doLast {
    	'bin/xvfb stop'.execute()
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/reports/jacoco"
    }
}

test {
    reports.html.enabled = false
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    // Include the results from the `test` task in all subprojects
    reportOn *.test
}

task stage(dependsOn: installApp) {
}

